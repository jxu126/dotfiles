if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

syntax on
filetype plugin indent on
autocmd FileType json syntax match Comment +\/\/.\+$+

set background=dark     " terminal theme is darkish hence
set expandtab           " 4 tabs per space
set shiftwidth=2        " less indenting
set tabstop=2           " wow
set scrolloff=5         " the floor is lava!
set smarttab            " smart tabs and backspaces
set cindent             " wicked smart!
set showmatch           " match my brackets plox
set autoread            " keep on the lookout for changing files
set t_Co=256            " more colors!
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
set backspace=indent,eol,start
set fillchars+=vert:\   " make the splitter prettier
set mouse=a             " allow mouse to click on nerdtree files
set number relativenumber              " add line numbers
set cursorline
set cursorcolumn

vmap <C-c> "+y
" allow mouse to copy to clipboard
set clipboard=unnamed   " allow mouse to copy to clipboard
set hls                 " allow highlighting when using *

" Code folding
set foldmethod=indent   "fold based on indent
set foldnestmax=8      "deepest fold
set nofoldenable        "dont fold by default
set foldlevel=1         "begin fold

" Move swap file from beside the source file
set swapfile
set dir=~/.tmp

" highlight whitespace at the end of line
autocmd InsertEnter * syn clear EOLWS | syn match EOLWS excludenl /\s\+\%#\@!$/
autocmd InsertLeave * syn clear EOLWS | syn match EOLWS excludenl /\s\+$/
highlight EOLWS ctermbg=red guibg=red


" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
" Auto Complete
Plug 'neoclide/coc.nvim', {'do': { -> coc#util#install()}}


" Navigation
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Javascript/Typescript
Plug 'leafgarland/typescript-vim'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'

" Rust
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'

Plug 'editorconfig/editorconfig-vim'
Plug 'sheerun/vim-polyglot'
Plug 'ruanyl/vim-sort-imports'
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }

" Statusline
Plug 'itchyny/lightline.vim'

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" General settings
let mapleader = ","

" Prettier settings
let g:prettier#config#print_width = 80
let g:prettier#config#tab_width = 2
let g:prettier#config#use_tabs = 'false'
let g:prettier#config#semi = 'true'
let g:prettier#config#single_quote = 'true'
let g:prettier#config#bracket_spacing = 'true'
let g:prettier#config#jsx_bracket_same_line = 'true'
let g:prettier#config#arrow_parens = 'always'
let g:prettier#config#trailing_comma = 'none'
let g:prettier#autoformat = 1
" flow|babylon|typescript|css|less|scss|json|graphql|markdown
" Prettier default: babylon
let g:prettier#config#parser = 'flow'
let g:prettier#config#config_precedence = 'prefer-file'
let g:prettier#config#prose_wrap = 'preserve'


let g:rustfmt_autosave = 1

" Fuzzy settings
nnoremap <C-l> :FZF<CR>
nnoremap <C-p> :FZF<CR>

let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -g ""'


" Completion settings

" Coc settings
source ~/dotfiles/config_files/vim/coc.vim

" Key Bindings
source ~/dotfiles/config_files/vim/keybindings.vim

" Lightline fixes when light line doesn't show if only one buffer
set laststatus=2
set noshowmode " gets rid of -- INSERT -- as is redunant

" Import sort
" let g:import_sort_auto = 1

" Go to definition
nmap <silent> gd <Plug>(coc-definition)

" Ctags
set tags=./tags;

" Language specific 
source ~/dotfiles/config_files/vim/markdown.vim

" Allow local overrides
if !empty(glob('~/.local_vimrc'))
endif
if empty(glob('~/.vim/autoload/plug.vim'))
endif

